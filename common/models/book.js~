module.exports = function(Book) {
	var OpenTok = require('opentok'),
    opentok = new OpenTok("45573122", "9a08272f35fdb842483a965326689466ebf75083");
	
	Book.confirm = function(obj, cb) {
	
	 
	  Book.findById(obj.idbook, function(err,data){

	  		if(data){
	  			data.status = "confirmed";
				data.confirmeddate = obj.confirmeddate;
				
				//Creamos la sesi√≥n y la almacenamos en sessionid. 
				opentok.createSession({mediaMode:"routed"}, function(err, session) {
				  if (err) return console.log(err);

				  // save the sessionId
				   data.sessionid=session.sessionId;
    			  
    			  //Creamos dos tokens para publisher y uno para moderator a partir de la session 
				   var tokenP1 = session.generateToken({
					  role :       'moderator',
					  expireTime : (new Date().getTime() / 1000)+(30 * 24 * 60 * 60), // in one month
					  data :       'name=Moderator'
					});
				   var tokenP2 = session.generateToken({
					  role :       'publisher',
					  expireTime : (new Date().getTime() / 1000)+(30 * 24 * 60 * 60), // in one month
					  data :       'name='+data.name
					});
				   var tokenMod = session.generateToken({
					  role :       'publisher',
					  expireTime : (new Date().getTime() / 1000)+(30 * 24 * 60 * 60), // in one month
					  data :       'name='+data.name
					});
					
				   data.codeMentor = tokenP1;
				   data.codeUser = tokenP2;
				   data.codeModerator = tokenMod;
		  		   data.save();
				});
				


	  			cb(null,	data);	
	  		}else{
	  			cb(null,	data);	
	  		}
	  	

	  });
	  
    }
     
    Book.remoteMethod(
        'confirm', 
        {
          accepts: 
          [
          	{arg: 'obj', type: 'object',http: { source: 'body' }},
          	
          ],
          returns: [
          	{arg: 'book', type: 'object'}
          ],
          http: {path: '/confirm', verb: 'post', status: 201, errorStatus: 400}
        }
    );

};
